<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="$(SolutionDir)Foundry.props" Condition="Exists('$(SolutionDir)Foundry.props')" />

  <PropertyGroup>
	<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <TargetFramework>net48</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  
  <PropertyGroup>
    <TargetFrameworkMonikerAssemblyAttributesPath>$(SolutionDir)Attributes\AssemblyAttributes.cs</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="ILRepack.Lib.MSBuild.Task" Version="2.0.31">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\TinyJSON\TinyJSON\TinyJSON.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="0Harmony, Version=2.2.2.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(FoundryAssembliesPath)0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Main">
      <HintPath>$(FoundryAssembliesPath)Main.dll</HintPath>
    </Reference>
    <Reference Include="Channel3">
      <HintPath>$(FoundryAssembliesPath)Channel3.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(FoundryAssembliesPath)Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>$(FoundryAssembliesPath)Unity.TextMeshPro.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.AssetBundleModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.AssetBundleModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.AudioModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.AudioModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.ImageConversionModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.ImageConversionModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.InputModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.JSONSerializeModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.JSONSerializeModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.PhysicsModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextCoreFontEngineModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.TextCoreFontEngineModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextCoreTextEngineModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.TextCoreTextEngineModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.TextRenderingModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.TextRenderingModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UIModule">
      <HintPath>$(FoundryAssembliesPath)UnityEngine.UIModule.dll</HintPath>
    </Reference>
    <Reference Include="Rewired_Core">
      <HintPath>$(FoundryAssembliesPath)Rewired_Core.dll</HintPath>
    </Reference>
    <Reference Include="mscorlib">
      <HintPath>$(FoundryAssembliesPath)mscorlib.dll</HintPath>
    </Reference>
    <Reference Include="Unfoundry">
      <HintPath>$(UnfoundryAssemblyPath)</HintPath>
    </Reference>
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="if not exist &quot;$(TargetModDir)&quot; mkdir &quot;$(TargetModDir)&quot;" />
    <Exec Command="copy /Y &quot;$(SolutionDir)Mod\*.*&quot; &quot;$(TargetModPath)&quot;" />
  </Target>

</Project>
